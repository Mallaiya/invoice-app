{"version":3,"sources":["Components/InvoiceList/InvoiceList.js","Components/Invoice/Invoice.js","App.js","serviceWorker.js","index.js"],"names":["InvoiceList","state","slNo","description","quantity","unitPrice","total","invoiceDataItem","toFixed","subTotal","salesTax","totalAmount","subTotalValue","salesTaxValue","totalAmountValue","addRow","invoiceDataAddItem","_this","push","setState","deleteRow","invoiceDataRemoveItem","console","log","length","pop","myMethod","inv","changeEventHandler","event","name","target","value","Object","defineProperty","salexTaxAmount","includes","indexOfFirst","indexOf","indexOfLast","salesTaxData","substring","isNaN","Number","changeDataHandler","invoiceData","id","i","salexTaxRef","document","querySelector","this","props","onRef","undefined","_React$createElement","_this2","react_default","a","createElement","className","type","onChange","bind","map","data","index","key","disabled","colSpan","Component","Invoice","child","getPDF","alert","onClick","companyName","invoiceName","addressLine","invoiceDate","invoiceNumber","poNumber","phoneNumber","clientName","mailId","clientCompanyName","invoiceContent","Components_InvoiceList_InvoiceList","ref","invoiceGreetingContent","App","setAddressLine","addressLineRef","OnChangeEventHandler","Components_Invoice_Invoice","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9b1f5f5.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nimport './InvoiceList.css';\n\nclass InvoiceList extends Component {\n    \n    state = {\n        slNo : '#',\n        description : 'Item Description',\n        quantity : 'Quantity',\n        unitPrice : 'Unit price (€)',\n        total : 'Total (€)',\n        invoiceDataItem : \n            [\n                {\n                    description : 'Supporting of in-house project (hours worked)',\n                    quantity : 40,\n                    unitPrice : 125.00.toFixed(2),\n                    total : 5000.00.toFixed(2)\n                },\n                {\n                    description : '',\n                    quantity : '',\n                    unitPrice : '',\n                    total : ''\n                },\n                { description : '', quantity : '', unitPrice : '', total : '' },\n                { description : '', quantity : '', unitPrice : '', total : '' },\n                { description : '', quantity : '', unitPrice : '', total : '' },\n                { description : '', quantity : '', unitPrice : '', total : '' },\n                { description : '', quantity : '', unitPrice : '', total : '' },\n                { description : '', quantity : '', unitPrice : '', total : '' }\n            ],\n        subTotal : 'Subtotal',\n        salesTax : 'Sales Tax (20%)',\n        totalAmount : 'Total',\n        subTotalValue : 5000.00.toFixed(2),\n        salesTaxValue : 1000.00.toFixed(2),\n        totalAmountValue : 6000.00.toFixed(2)\n    }\n\n    componentDidMount() {\n        this.props.onRef(this);\n    }\n    \n    componentWillUnmount() {\n        this.props.onRef(undefined);\n    }\n\n    addRow = () => {\n      let addData = { description : '', quantity : '', unitPrice : '', total : '' };\n      let invoiceDataAddItem = this.state.invoiceDataItem;\n      invoiceDataAddItem.push(addData);\n      this.setState({\n          invoiceDataItem : invoiceDataAddItem\n      });\n    }\n\n    deleteRow = () => {\n        let invoiceDataRemoveItem = this.state.invoiceDataItem;\n        console.log(invoiceDataRemoveItem[invoiceDataRemoveItem.length-1]);\n        console.log(invoiceDataRemoveItem[invoiceDataRemoveItem.length-1].description !== \"\");\n        \n        if(invoiceDataRemoveItem[invoiceDataRemoveItem.length-1].description === \"\"\n            && invoiceDataRemoveItem[invoiceDataRemoveItem.length-1].quantity === \"\" \n            && invoiceDataRemoveItem[invoiceDataRemoveItem.length-1].unitPrice === \"\" ){\n                invoiceDataRemoveItem.pop();\n                this.setState({\n                    invoiceDataItem : invoiceDataRemoveItem\n                });\n        }\n    }\n\n    myMethod = () => {\n        console.log(\"My\");\n    }\n\n    inv = () => {\n        console.log(\"Call\");\n    }\n\n    changeEventHandler = (event) => {\n        let name = event.target.name;\n        let value = event.target.value;\n        console.log(name, value)\n        this.setState({\n            [name] : value\n        });\n        let salexTaxAmount = 0;\n        if(name === 'salesTax'){\n            if(value.includes(\"(\")&&value.includes(\"%)\")){\n                let indexOfFirst = value.indexOf(\"(\");\n                let indexOfLast = value.indexOf(\"%\");\n                console.log(indexOfFirst);\n                console.log(indexOfLast);\n                let salesTaxData = value.substring(indexOfFirst+1, indexOfLast);\n                if(!isNaN(salesTaxData) && (salesTaxData>=0&&salesTaxData<=100)){\n                    salexTaxAmount = (salesTaxData / 100) * this.state.subTotalValue;\n\n                    console.log(salexTaxAmount);\n                   this.setState({\n                       salesTaxValue : salexTaxAmount.toFixed(2)\n                   })\n                }else{\n                    this.setState({\n                        salesTaxValue : 0.00.toFixed(2)\n                    });    \n                }   \n            }else{\n                this.setState({\n                    salesTaxValue : 0.00.toFixed(2)\n                });    \n            }\n            let totalAmountValue =  (Number(this.state.subTotalValue) + Number(salexTaxAmount)).toFixed(2);\n            this.setState({\n                totalAmountValue : totalAmountValue\n            });  \n        }\n        \n    }\n\n    changeDataHandler = (event) => { \n        let name = event.target.name;       \n        let value = event.target.value;\n        let invoiceData = this.state.invoiceDataItem;\n        if(name === \"description\"){\n            invoiceData[event.target.id].description = value;\n        }else if(name === \"quantity\" && !isNaN(value)){\n            invoiceData[event.target.id].quantity = value;\n        }else if(name === \"unitPrice\" && !isNaN(value)){\n            invoiceData[event.target.id].unitPrice = value;\n        }\n        this.setState({\n            invoiceDataItem : invoiceData\n        })\n        let quantity = this.state.invoiceDataItem[event.target.id].quantity;\n        let unitPrice = this.state.invoiceDataItem[event.target.id].unitPrice;\n        let total = quantity * unitPrice;\n        if(!isNaN(total)){\n            invoiceData[event.target.id].total = total.toFixed(2);\n        }\n        let subTotal = 0;\n        for(let i = 0; i < this.state.invoiceDataItem.length;i++){\n               subTotal = (Number(subTotal) + Number(this.state.invoiceDataItem[i].total)).toFixed(2);\n        }\n        this.setState({\n            invoiceDataItem : invoiceData,\n            subTotalValue : subTotal\n        })\n        let salexTaxRef = document.querySelector('.salesTax').value;\n        console.log(salexTaxRef);\n        let salexTaxAmount = 0;        \n        if(salexTaxRef.includes(\"(\")&&salexTaxRef.includes(\"%)\")){\n            let indexOfFirst = salexTaxRef.indexOf(\"(\");\n            let indexOfLast = salexTaxRef.indexOf(\"%\");\n            console.log(indexOfFirst);\n            console.log(indexOfLast);\n            let salesTaxData = salexTaxRef.substring(indexOfFirst+1, indexOfLast);\n            console.log(salesTaxData);\n            if(!isNaN(salesTaxData) && (salesTaxData>=0&&salesTaxData<=100)){\n                salexTaxAmount = (salesTaxData / 100) * subTotal;\n               this.setState({\n                   salesTaxValue : salexTaxAmount.toFixed(2)\n               })\n            }else{\n                this.setState({\n                    salesTaxValue : 0.00.toFixed(2)\n                });    \n            }   \n        }else{\n            this.setState({\n                salesTaxValue : 0.00.toFixed(2)\n            });    \n        }\n        let totalAmountValue =  (Number(subTotal) + Number(salexTaxAmount)).toFixed(2);\n        this.setState({\n            totalAmountValue : totalAmountValue\n        })\n    }\n\n    render () {\n        return (\n                <div className = \"row invoiceFormRow8\">\n                            <table>\n                                <thead>\n                                    <tr>\n                                        <th className = \"tab-col-1\">\n                                            <input type =\"text\" className = \"inp-col-head\" name = \"slNo\" value = {this.state.slNo} onChange = {this.changeEventHandler.bind(this)} />\n                                        </th>\n                                        <th className=\"tab-col-2\">\n                                            <input type =\"text\" className = \"inp-col-head\" name = \"description\" name = \"invoiceDataItem[index].slNo\"value = {this.state.description} onChange = {this.changeEventHandler.bind(this)} />    \n                                        </th>\n                                        <th className = \"tab-col-3\" >\n                                            <input type =\"text\" className = \"inp-col-head\" name = \"quantity\" value = {this.state.quantity} onChange = {this.changeEventHandler.bind(this)} />\n                                        </th>\n                                        <th className = \"tab-col-4\">\n                                            <input type =\"text\" className = \"inp-col-head\" name = \"unitPrice\" value = {this.state.unitPrice} onChange = {this.changeEventHandler.bind(this)} />\n                                        </th>\n                                        <th className = \"tab-col-5\">\n                                            <input type =\"text\" className = \"inp-col-head\" name = \"total\" value = {this.state.total} onChange = {this.changeEventHandler.bind(this)} />\n                                        </th>\n                                    </tr>\n                                </thead>    \n                                <tbody>\n                                    {\n                                        this.state.invoiceDataItem.map((data, index) => {\n                                            return <tr key = {index}>\n                                                <td className = \"tab-col-1\">\n                                                    <input type =\"text\" className = \"inp-col not-allowed\" name = \"slNo\" disabled value = {index+1} id = {index} />\n                                                </td>\n                                                <td className=\"tab-col-2\">\n                                                    <input type =\"text\" className = \"inp-col\" name = \"description\" value = {data.description} id = {index} onChange = {this.changeDataHandler.bind(this)} />    \n                                                </td>\n                                                <td className = \"tab-col-3\" >\n                                                    <input type =\"text\" className = \"inp-col\" name = \"quantity\" value = {data.quantity} id = {index} onChange = {this.changeDataHandler.bind(this)} />\n                                                </td>\n                                                <td className = \"tab-col-4\">\n                                                    <input type =\"text\" className = \"inp-col\" name = \"unitPrice\" value = {data.unitPrice} id = {index} onChange = {this.changeDataHandler.bind(this)} />\n                                                </td>\n                                                <td className = \"tab-col-5\">\n                                                    {\n                                                        <input type =\"text\" className = \"inp-col not-allowed\" name = \"total\" disabled value = {data.total === \"\" ? '-': data.total} id = {index} onChange = {this.changeDataHandler.bind(this, index)} />\n                                                    }\n                                                </td>    \n                                            </tr>\n                                        })\n                                    }\n                                </tbody>\n                                <tfoot>\n                                    <tr>\n                                        <td colSpan=\"4\">\n                                            <input type =\"text\" className = \"inp-col\" name = \"subTotal\" value = {this.state.subTotal} onChange = {this.changeEventHandler.bind(this)} />\n                                        </td>\n                                        <td colSpan=\"1\">\n                                            <input type =\"text\" className = \"inp-col not-allowed\" disabled name = \"subTotalValue\" value = {this.state.subTotalValue} onChange = {this.changeEventHandler.bind(this)} />    \n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">\n                                            <input type =\"text\" className = \"inp-col salesTax\" name = \"salesTax\" value = {this.state.salesTax} onChange = {this.changeEventHandler.bind(this)} />\n                                        </td>\n                                        <td colSpan=\"1\">\n                                            <input type =\"text\" className = \"inp-col salesTaxValue not-allowed\" disabled name = \"salesTaxValue\" value = {this.state.salesTaxValue} onChange = {this.changeEventHandler.bind(this)} />    \n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td colSpan=\"4\">\n                                            <input type =\"text\" className = \"inp-col\" name = \"totalAmount\" value = {this.state.totalAmount} onChange = {this.changeEventHandler.bind(this)} />\n                                        </td>\n                                        <td colSpan=\"1\">\n                                            <input type =\"text\" className = \"inp-col not-allowed\" disabled name = \"totalAmountValue\" value = {this.state.totalAmountValue} onChange = {this.changeEventHandler.bind(this)} />    \n                                        </td>\n                                    </tr>\n                                </tfoot>\n                            </table>\n                        </div>       \n        );\n    }\n}\n\nexport default InvoiceList;","import React, {Component} from \"react\";\n\nimport './Invoice.css';\n\nimport InvoiceList from '../InvoiceList/InvoiceList';\n\nclass Invoice extends Component {\n\n    componentDidMount() {\n        \n    }\n\n    addRow = () => {\n        this.child.addRow();\n    }\n\n    deleteRow = () => {\n        this.child.deleteRow();\n    }\n\n    getPDF = () => {\n        alert(\"Under Development\");\n    }\n    render() {\n        \n       return (\n            <div className = \"container\">\n                <div className = \"invoiceWidget\">\n                    <div className = \"widget invoiceWidgetRow1\">\n                        <p>invoiceto.me</p>\n                        <p>Edit the template to make invoice →</p>\n                    </div>\n                    <div className = \"widget invoiceWidgetRow2\">\n                        <p>Generate invoice</p>\n                        <button onClick = {this.getPDF.bind(this)}>Get PDF</button>\n                    </div>\n                    <div className = \"widget invoiceWidgetRow3\">\n                        <p>Resize Table</p>\n                        <p className = \"addRow\" onClick = {this.addRow}>+ Add row</p>\n                        <p className = \"deleteRow\" onClick = {this.deleteRow}>– Delete row</p>\n                    </div>\n                </div>\n                <div className = \"invoiceForm\">\n                    <div className = \"row invoiceFormRow1\">\n                        <div>\n                            <input type=\"text\" className=\"companyName left-align\" value={this.props.data.companyName} name = \"companyName\" onChange = {this.props.changeEventHandler}/>\n                        </div>\n                        <div>\n                            <input type=\"text\" className=\"invoiceName right-align\" value={this.props.data.invoiceName} name = \"invoiceName\" onChange = {this.props.changeEventHandler}/>\n                        </div>\n                    </div>\n                    <div className = \"row invoiceFormRow2\">\n                        <div>\n                            <input type=\"text\" className=\"addressLine left-align\" value={this.props.data.addressLine[0]} name = \"addressLine1\" onChange = {this.props.changeEventHandler}/>\n                        </div>\n                        <div>\n                            <input type=\"text\" className=\"invoiceDate right-align\" value={this.props.data.invoiceDate} name = \"invoiceDate\" onChange = {this.props.changeEventHandler}/>\n                        </div>\n                    </div>\n                    <div className = \"row invoiceFormRow3\">\n                        <div>\n                            <input type=\"text\" className=\"addressLine left-align\" value={this.props.data.addressLine[1]} name = \"addressLine2\" onChange = {this.props.changeEventHandler}/>\n                        </div>\n                        <div>\n                            <input type=\"text\" className=\"invoiceNumber right-align\" value={this.props.data.invoiceNumber} name = \"invoiceNumber\" onChange = {this.props.changeEventHandler}/>\n                        </div>\n                    </div>\n                    <div className = \"row invoiceFormRow4\">\n                        <div>\n                            <input type=\"text\" className=\"addressLine left-align\" value={this.props.data.addressLine[2]} name = \"addressLine3\" onChange = {this.props.changeEventHandler}/>\n                        </div>\n                        <div>\n                        <input type=\"text\" className=\"poNumber right-align\" value={this.props.data.poNumber} name = \"poNumber\" onChange = {this.props.changeEventHandler}/>\n                        </div>\n                    </div>\n                    <div className = \"row invoiceFormRow5\">\n                        <div>\n                            <input type=\"text\" className=\"phoneNumber left-align\" value={this.props.data.phoneNumber} name = \"phoneNumber\" onChange = {this.props.changeEventHandler}/>\n                        </div>\n                        <div>\n                            <input type=\"text\" className=\"clientName right-align\" value={this.props.data.clientName} name = \"clientName\" onChange = {this.props.changeEventHandler}/>\n                        </div>\n                    </div>\n                    <div className = \"row invoiceFormRow6\">\n                        <div>\n                            <input type=\"text\" className=\"mailId left-align\" value={this.props.data.mailId} name = \"mailId\" onChange = {this.props.changeEventHandler}/>\n                        </div>\n                        <div>\n                            <input type=\"text\" className=\"clientCompanyName right-align\" value={this.props.data.clientCompanyName} name = \"clientCompanyName\" onChange = {this.props.changeEventHandler}/>\n                        </div>\n                    </div>\n                    <hr />\n                    <div className = \"row invoiceFormRow7\">\n                        <textarea className=\"growfield invoiceContent\" value={this.props.data.invoiceContent} name = \"invoiceContent\" onChange = {this.props.changeEventHandler}></textarea>\n                    </div>\n                    <InvoiceList onRef = {ref => (this.child = ref)}/>\n                    <div className = \"row invoiceFormRow9\">\n                        <textarea className=\"growfield invoiceContent greeting\" value={this.props.data.invoiceGreetingContent} name = \"invoiceGreetingContent\" onChange = {this.props.changeEventHandler}></textarea>\n                    </div>\n                </div>\n            </div>        \n       ); \n    }\n}\n\nexport default Invoice;","import React, {Component} from 'react';\nimport './App.css';\n\nimport Invoice from './Components/Invoice/Invoice'\n\nclass App extends Component {\n  \n  state = {\n    companyName : 'Your Company Name',\n    invoiceName : 'invoice',\n    addressLine : ['123 Your Street','Your Town','Address Line 3'],\n    invoiceDate : '6-June-2019',\n    invoiceNumber : 'Invoice #2334889',\n    poNumber : 'PO 456001200',\n    phoneNumber : '(123) 456 789',\n    mailId : 'email@yourcompany.com',\n    clientName : 'Att: Ms. Jane Doe',\n    clientCompanyName : 'Client Company Name',\n    invoiceContent : 'Dear Ms. Jane Doe, \\n\\nPlease find below a cost-breakdown for the recent work completed. Please make payment at your earliest convenience, and do not hesitate to contact me with any questions\\n\\nMany thanks,\\nYour Name',\n    invoiceGreetingContent : 'Many thanks for your custom! I look forward to doing business with you again in due course.\\n\\nPayment terms: to be received within 60 days.'\n  }\n\n\n    setAddressLine = (addressLineRef)=> {\n      this.setState({\n        addressLine : addressLineRef\n      });\n    }\n\n    OnChangeEventHandler = (event) => {\n      let name = event.target.name;\n      let value = event.target.value;\n      console.log(name);\n\n      if(name.includes(\"addressLine\")){\n        let addressLineRef = this.state.addressLine;\n        if(name.includes(\"1\")){\n          addressLineRef[0] = value;\n          this.setAddressLine(addressLineRef);\n        }else if(name.includes(\"2\")){\n          addressLineRef[1] = value;\n          this.setAddressLine(addressLineRef);\n        }else{\n          addressLineRef[2] = value;\n          this.setAddressLine(addressLineRef);\n        }\n        \n        console.log(this.state);\n      }else{\n        this.setState({\n          [name] : value\n        });\n        console.log(this.state);\n      }\n    }\n    \n  render () {\n    return (\n      <div className = \"App\">\n      <Invoice \n        data = {this.state}\n        changeEventHandler = {this.OnChangeEventHandler.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}